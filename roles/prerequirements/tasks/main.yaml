- name: Add pam_limits.so to common-session
  blockinfile:
    path: /etc/pam.d/common-session
    create: false
    block: |
      session required pam_limits.so

- name: Add pam_limits.so to common-session-noninteractive
  blockinfile:
    path: /etc/pam.d/common-session-noninteractive
    create: false
    block: |
      session required pam_limits.so

- name: Insert a new rule pam_wheel.so with argument 'use_uid' after an \
        existing rule pam_rootok.so
  community.general.pamd:
    name: su
    type: session
    control: required
    module_path: pam_systemd.so
    new_type: session
    new_control: required
    new_module_path: pam_limits.so
    state: after

- name: Add or modify hard nofile limits for root
  community.general.pam_limits:
    domain: root
    limit_type: hard
    limit_item: nofile
    value: 1024000

- name: Add or modify hard nofile limits for root
  community.general.pam_limits:
    domain: root
    limit_type: hard
    limit_item: nproc
    value: 1024000

- name: Add or modify soft nofile limits for root
  community.general.pam_limits:
    domain: root
    limit_type: soft
    limit_item: nofile
    value: 1024000

- name: Add or modify soft nofile limits for root
  community.general.pam_limits:
    domain: root
    limit_type: soft
    limit_item: nproc
    value: 1024000

- name: Add or modify hard nofile limits for wildcard domain
  community.general.pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: nofile
    value: 1024000

- name: Add or modify hard nofile limits for wildcard domain
  community.general.pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: nproc
    value: 1024000

- name: Add or modify soft nofile limits for wildcard domain
  community.general.pam_limits:
    domain: '*'
    limit_type: soft
    limit_item: nofile
    value: 1024000

- name: Add or modify soft nofile limits for wildcard domain
  community.general.pam_limits:
    domain: '*'
    limit_type: soft
    limit_item: nproc
    value: 1024000

- name: Add the br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Add the br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Enable ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Enable bridge ipv4
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  
- name:  Enable bridge ipv6
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Log rotation
  blockinfile:
    path: /etc/logrotate.d/allcontainerlogs
    create: true
    block: |
      {
      rotate 5
      daily
      dateext
      maxsize 250M
      missingok
      compress
      copytruncate
      dateformat -%Y%m%d%H%M%S
      create 0644 root root
      }

- name: Set vm.panic_on_oom to 0
  sysctl:
    name: vm.panic_on_oom
    value: '0'

- name: Set vm.overcommit_memory to 1
  sysctl:
    name: vm.overcommit_memory
    value: '1'

- name: Set kernel.panic to 10
  sysctl:
    name: kernel.panic
    value: '10'

- name: Set kernel.panic_on_oops to 1
  sysctl:
    name: kernel.panic_on_oops
    value: '1'

- name: Disable SWAP (swapoff)(1/2)
  shell: |
    swapoff -a

- name: Disable SWAP (Remove fstab  entry)(1/2)
  lineinfile:
    path: '/etc/fstab'
    regexp: '\sswap\s'
    state: 'absent'

- name: Disable SELinux
  ansible.posix.selinux:
    state: disabled
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Redhat'

- name: Stop apparmor
  service:
    name: apparmor
    state: stopped
  failed_when: false
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Disable apparmor
  service:
    name: apparmor
    enabled: false
  failed_when: false
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'